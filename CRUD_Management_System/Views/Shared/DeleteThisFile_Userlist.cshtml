@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Extensions
@model X.PagedList.IPagedList<CRUD_Management_System.Models.UserDetailsModel>

<h2>Login Gegevens</h2>

<table class="table table-bordered">
    <thead class="table-light">
        <tr>
            <th>Name</th>
            <th>Surname</th>
            <th>Alias</th>
            <th>Address</th>
            <th>ZIP Code</th>
            <th>City</th>
            <th>Email</th>
            <th>Phonenumber</th>
            <th>Online Status</th>
            <th>Absence due Illness</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.Name</td>
                <td>@user.Surname</td>
                <td>@user.Alias</td>
                <td>@user.Address</td>
                <td>@user.ZIP</td>
                <td>@user.City</td>
                <td>@user.Email</td>
                <td>@user.Phonenumber</td>
                <td>@user.Online</td>
                <td>@user.Sick</td>
                <td>
                    <a href="@Url.Action("Details", "User", new { aliasId = user.Alias })" class="btn btn-info btn-sm">View Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Paginering toevoegen -->
<div class="pagination-container">
    @Html.PagedListPager(Model, page => Url.Action("GetUserList", new { page }), new PagedListRenderOptions
{
    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
    DisplayLinkToLastPage = PagedListDisplayMode.Always,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
    MaximumPageNumbersToDisplay = 5,
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" }
})
</div>
